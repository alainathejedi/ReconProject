#!/usr/bin/python3

import os
import requests
from googlesearch import search
from bs4 import BeautifulSoup
import requests



target = ""

def intro():

    print(".     .       .  .   . .   .   . .    +  .")
    print("  . *   .  :     .    *. :. .___---------___.")
    print("       .  .   .    .  :.:. _'.^ .^ ^.  '.. :'-_. .")
    print("    .  :       .  .  .:../:            . .^  :.:\.")
    print("        .   . :: *. :.:/:                       .:\\")
    print(" .  :    .     . _ :::/:                         .:")
    print("  .. . .   . - : :.:./.                           .:\\")
    print("  .      .     . :..|:                             .:|")
    print("    .   *   . : : ..||                             !:|") 
    print("  .     . . . ::. ::\(                             :)/")
    print(" .   .     : . : .:.|. \033[38;5;156m@@@@@@\033[0m               \033[38;5;156m@@@@@@\033[0m::|")
    print("  :.. .  :   : .:  ::|.\033[38;5;156m@@@@@@@\033[0m             \033[38;5;156m@@@@@@@\033[0m:|")
    print(" .  .  .  ..  .  .. :\ \033[38;5;156m@@@@@@@@\033[0m           \033[38;5;156m@@@@@@@@\033[0m :/")
    print("  .        .* :: : -.:\ \033[38;5;156m@@@@@@@@\033[0m         \033[38;5;156m@@@@@@@@\033[0m.:/")
    print("    .  .*   . . . . :.:\. \033[38;5;156m@@@@@@@\033[0m       \033[38;5;156m@@@@@@@\033[0m..:/")
    print("      :: . . . . ::.:..:.\                   ..:/")
    print("   .   .   .  .. :  -::::.\.       | |     . .:/")
    print("      .  :  .  .  .-:..:.::.\             ..:/")
    print(" .      -.   . . . .: .:*:.:.\.           .:/")
    print(".   .   .  :      : ....::_:..:\  \___   :/")
    print("   .   .  .   .:. .. .  .: :.:.:\       :/")
    print("     *   .   .   : . ::. :.:. .:.|\    /|")
    print("     .         *   .  .  ...:: ..|  --  |")
    print(".      . . .   .  .  . ... :.*:..(  --  )")
    print(" .   .       .      :  .   .: ::/  .  .::\\ ______ ____    ____ .______    _______ .______          ___       __   _______  ")
    print("                                           /      |\   \  /   / |   _  \  |   ____||   _  \        /   \     |  | |       \ ")
    print("                                          |  ,----' \   \/   /  |  |_)  | |  |__   |  |_)  |      /  ^  \    |  | |  .--.  |")
    print("                                          |  |       \_    _/   |   _  <  |   __|  |      /      /  /_\  \   |  | |  |  |  |")
    print("                                          |  `----.    |  |     |  |_)  | |  |____ |  |\  \----./  _____  \  |  | |  '--'  |")
    print("                                           \______|    |__|     |______/  |_______|| _| `._____/__/     \__\ |__| |_______/ ")

    global target
    target = input("\n\n\n\033[1;156mWhat is the IP or URL you are attempting to scan? \033[0m")

#Thank you for visiting https://asciiart.website/

#This ASCII pic can be found at
#https://asciiart.website/index.php?art=creatures/aliens

    
    def mainmenu():
        global target
        
        print("|----------------------------------|")
        print("\033[38;5;156m| *** MAIN MENU *** |\033[0m")
        print("|----------------------------------|")
        print("| [1] \033[38;5;140mNmap\033[0m                        |")
        print("|----------------------------------|")
        print("| [2] Netstat                      |")
        print("|----------------------------------|")
        print("| [4] Google and Google FU!        |")
        print("|----------------------------------|")
        print("| [8] Reset the Program            |")
        print("|----------------------------------|")
        print("| [0] Exit                         |")
        print("|----------------------------------|")

        while True:
            try:
                option=int(input("\n\033[38;5;156mWhat are you looking for / looking to do? Type just the number to select the option!\033[0m "))
                break
            except ValueError:
                print("\n\033[38;5;203mOpe!  What a midwestern thing of me to say...Let's try again, that didn't feel right!\033[0m\n")

        while option !=8:
            def option1():
                global target
                print("----------------------------------")
                print("\033[38;5;140mNmap:\033[0m")
                print("----------------------------------")
                print("[1] Nmap Explained and Basic Commands List")
                print("[2] Preset Nmap scanning")
                print("[3] Root Access Needed - Preset Nmap Scanning")
                print("[9] \033[96mMain Menu\033[0m")
                print("[0] Exit")
                print("----------------------------------")
                
                while True:
                    try:
                        nmapoption=int(input("\nWhat do you want to do? Just type the number, and open the various menus for nmap scanning."))
                        break
                    except ValueError:
                        print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n")

                               
                
                if nmapoption ==1:
                    print("\nThis is the explanation of nmap and basically a little cheat sheet for the basic flags to accompany the command.\n")
                    mainmenu()
                elif nmapoption ==2:
                    def nmapmenu():
                        global target
                        print("----------------------------------")
                        print("\033[38;5;140mNmap Menu:\033[0m - \033[38;5;226mTarget\033[0m = " + target)
                        print("----------------------------------")
                        print("[1] Only Host Discovery")
                        print("[2] Only Port Discovery")
                        print("[3] Check a Specific Port - TCP SYN Scan (UDP in Root Access)")
                        print("[4] Scan a Port Range")
                        print("[5] Script Scan - Default Script (nmap -sC)")
                        print("[6] Service Version Discovery") 
                        print("[7] Scan for Service, Traceroute, Ports, OS, and Scripts (nmap -A)")
                        print("[8] Scan by Speed (T1, T2, etc)")
                        print("[9] Host interfaces and Routes")
                        print("[10] Nmap Man Page")
                        print("[11] Scan X Random Hosts")
                        print("[20] \033[96mMain Menu\033[0m")
                        print("[30] Reset the Target IP or URL")
                        print("[0] Exit")
                        print("----------------------------------")

                        while True:
                            try:
                                nmap=int(input("\nWhat do you want to do? Just type the number, and open the various menus for nmap scanning."))
                                break
                            except ValueError:
                                print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n ")
                                nmapmenu()

                                
                        if nmap ==1:
                            os.system("nmap -sn " + target)
                            nmapmenu()
                        elif nmap ==2:
                            os.system("nmap -Pn " + target)
                            nmapmenu()
                            
                        elif nmap ==3:
                            portchoice = input("\nWhat is the port number you want to check? You can enter one TCP Port (UDP in Root Access)! ")
                            os.system("nmap " + target + " -p " + portchoice)
                            nmapmenu()
                                              
                        elif nmap ==4:
                            portrange = input("\nWhat is the range in the port numbers you want to scan? For example, 1-100. It must be: number - number ")
                            os.system("nmap " + target + " -p " + portrange)
                            nmapmenu()
                                              
                        elif nmap ==5:
                            os.system("nmap -sC " + target)
                            nmapmenu()

                        elif nmap ==6:
                            os.system("nmap -sV " + target)
                            nmapmenu()
                        elif nmap ==7:
                            os.system("nmap -A " + target)
                            nmapmenu()
                        elif nmap ==8:
                            def scanbyspeedmenu():
                                global target
                                print("----------------------------------")
                                print("\033[38;5;226mScan by Speed\033[0m - \033[38;5;226mTarget\033[0m = " + target)
                                print("----------------------------------")
                                print("[0] Paranoia (T0, IDS Evasion)")
                                print("[1] Sneaky Sneaky (T1, IDS Evasion)")
                                print("[2] Minnesota Nice (T2, Slows down to use less bandwith and resources)")
                                print("[3] Normies (T3, the normal scan speed)") 
                                print("[4] Assertive (T4, Speeds up the scan)")
                                print("[5] Aggressive (T5, Very speedy scan on a reliable network)")
                                print("[6] \033[38;5;140mNmap Menu\033[0m")
                                print("[9] \033[96mMain Menu\033[0m")
                                print("----------------------------------")
                              

                                while True:
                                    try:
                                        scanbyspeed=int(input("\nWhat do you want to do? Just type the number, scan by the speed you want! The slower the speed, the more accurate it MAY be...though it will take time! "))
                                        break
                                    except ValueError:
                                        print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n ")

                                if scanbyspeed ==0:
                                    os.system("nmap -T0 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==1:
                                    os.system("nmap -T1 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==2:
                                    os.system("nmap -T2 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==3:
                                    os.system("nmap -T3 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==4:
                                    os.system("nmap -T4 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==5:
                                    os.system("nmap -T5 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==6:
                                    option1()

                            scanbyspeedmenu()    
                        
                        elif nmap == 9:
                            os.system("nmap --iflist")
                            nmapmenu()
                        elif nmap ==10:
                            os.system("nmap -h")
                            nmapmenu()
                            
                        elif nmap ==11:
                            targetnumber = input("\nHow many random hosts would you like to scan? ")
                            os.system("nmap -iR " + targetnumber)
                            nmapmenu()

                        elif nmap ==20:
                            mainmenu()
                           
                        elif nmap ==30:
                            target2 = input("\nWhat IP or URL would you like to use for this scan? Note that you can always reset it! ")
                            target = target2
                            print("The new Target IP or URL is: " + target2)
                            
                        else:
                            print("\nOops! Let's try again, shall we?\n")
                            nmapmenu()
                                    
                    nmapmenu()
                    
                elif nmapoption ==3:
                    def rootmenu():
                        global target 
                        print("----------------------------------")
                        print("\033[38;5;140mNmap\033[0m - \033[1mRoot Access Required:\033[0m - \033[38;5;226mTarget\033[0m = " + target)
                        print("----------------------------------")
                        print("[1] Operating System Scan")
                        print("[2] UDP Port Scan")
                        print("[3] IP Protocol Scan")
                        print("[4] HTTP Web Server Scan (script)") 
                        print("[5] Check for XSS Vulnerabilities (script)")
                        print("[6] Check for SQL Vulnerabilities (script)")
                        print("[8] Nmap Man Page")
                        print("[9] \033[96mMain Menu\033[0m")
                        print("[111] Reset the Target IP or URL")
                        print("[0] Exit")
                        print("----------------------------------")
                        
                        while True:
                            try:
                                root=int(input("\nWhat do you want to do? Just type the number, and open the various menus for nmap scanning. "))
                                break
                            except ValueError:
                                print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n")

                        if root ==1:
                            os.system("nmap -O " + target)
                            oscheck = int(input("\nWere you able to find the OS version and information? Or would you like to do a more intense scan? Type 1 if you're good, type 2 if you need a deeper scan! "))
                            if oscheck ==1:
                                rootmenu()
                            elif oscheck ==2:
                                os.system("nmap -O --osscan-guess " + target)
                                rootmenu()
                            else:
                                print("\nOops! Looks like an invalid option. Let's try again, shall we? ")
                                rootmenu()
                        
                        elif root ==2:
                            os.system("nmap -sU " + target)
                            rootmenu()
                            
                        elif root ==3:
                            os.system("nmap -sO " + target)
                            rootmenu()
                            
                        elif root ==4:
                            os.system("nmap --script http-enum -sV " + target)
                            rootmenu()
                            
                        elif root ==0:
                            exit()
                          
                            
                    rootmenu()        
                            
                
                elif nmapoption ==9:
                    mainmenu()
                 
                elif nmapoption ==0:
                    exit()
                
            def option4():
                print("----------------------------------")
                print("\033[38;5;205mGoogle and Google FU:\033[0m")
                print("----------------------------------")
                print("[1] \033[38;5;212mGoogle FU and Explanations\033[0m")
                print("[2] \033[38;5;99mSearch \"The Google\"\033[0m")
                print("[3] Full Google Search")
                print("[9] \033[96mMain Menu\033[0m")
                print("----------------------------------")

                while True:
                    try:
                        googleoption=int(input("\n\033[38;5;205mWhat are you looking for / looking to do? Type just the number to select the option!\033[0m \n"))
                        break
                    except ValueError:
                        print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n")

               # if googleoption ==1:


                
                # Function to perform a Google search and print the results
                if googleoption ==2:
                    def google_search(query):
                        try:
                            # Perform the search
                            results = search(query, num_results=5, lang='en')

                        # Print the results
                            for i, result in enumerate(results, start=1):
                                print(f"Result {i}:")
                                print(result)
                                print("----------------------------------")
                        except Exception as e:
                            print(f"Error: {e}")

                    query = input("What do you want to search for?: ")
                    google_search(query)
                    


                elif googleoption ==3:
                    # Function to retrieve the title and description of a URL
                    def get_title_and_description(url):
                        try:
                            response = requests.get(url)
                            soup = BeautifulSoup(response.text, 'html.parser')
                            title = soup.title.string.strip()
                            description = soup.find('meta', attrs={'name': 'description'})
                            if description:
                                description = description.get('content').strip()
                            else:
                                description = "No description available."
                            return title, description
                        except requests.exceptions.RequestException:
                            return None, None

                    # Function to perform a Google search and print the results with additional information
                    def google_search(query):
                        try:
                            # Perform the search
                            results = search(query, num_results=5, lang='en')

                            # Print the results with additional information
                            for i, result in enumerate(results, start=1):
                                print(f"Result {i}:")
                                print("URL:", result)
                                title, description = get_title_and_description(result)
                                print("Title:", title)
                                print("Description:", description)
                                print("----------------------------------")
                        except Exception as e:
                            print(f"Error: {e}")

                    # Example usage
                    query = input("What do you want to search for?: ")
                    google_search(query)


            


                elif googleoption ==9:
                    mainmenu()
                else:
                    print("Oops! Looks like an invalid option. Want to try again?")
                    option4()

            def exit():
                print("\n\033[38;5;156mAlrighty then! Thanks for visiting. I hope it helped and happy threat hunting!\033[0m")
                os._exit(0)


### MAIN MENU FINAL PART OF DEF ###

            if option ==1:
                option1()
            elif option ==2:
                option2()
            elif option ==3:
                option3()
            elif option ==4:
                option4()
            elif option ==5:
                option5()
            elif option ==0:
                exit()
            else:
                print("\n\033[38;5;203mInvalid choice, try again.\033[0m")
                mainmenu()


    mainmenu()
intro()
