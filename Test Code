#!/usr/bin/python3

import os
import requests
from googlesearch import search
from bs4 import BeautifulSoup
import requests



def intro():

print(".     .       .  .   . .   .   . .    +  .
  .     .  :     .    .. :. .___---------___.
       .  .   .    .  :.:. _".^ .^ ^.  '.. :"-_. .
    .  :       .  .  .:../:            . .^  :.:\.
        .   . :: +. :.:/: .   .    .        . . .:\
 .  :    .     . _ :::/:               .  ^ .  . .:\
  .. . .   . - : :.:./.                        .  .:\
  .      .     . :..|:                    .  .  ^. .:|
    .       . : : ..||        .                . . !:|
  .     . . . ::. ::\(                           . :)/
 .   .     : . : .:.|. ######              .#######::|
  :.. .  :-  : .:  ::|.#######           ..########:|
 .  .  .  ..  .  .. :\ ########          :######## :/
  .        .+ :: : -.:\ ########       . ########.:/
    .  .+   . . . . :.:\. #######       #######..:/
      :: . . . . ::.:..:.\           .   .   ..:/
   .   .   .  .. :  -::::.\.       | |     . .:/
      .  :  .  .  .-:.":.::.\             ..:/
 .      -.   . . . .: .:::.:.\.           .:/
.   .   .  :      : ....::_:..:\   ___.  :/
   .   .  .   .:. .. .  .: :.:.:\       :/
     +   .   .   : . ::. :.:. .:.|\  .:/|
     .         +   .  .  ...:: ..|  --.:|
.      . . .   .  .  . ... :..:.."(  ..)"
 .   .       .      :  .   .: ::/  .  .::\")

------------------------------------------------
#Thank you for visiting https://asciiart.website/

#This ASCII pic can be found at
#https://asciiart.website/index.php?art=creatures/aliens

    
    def mainmenu():
        print("|----------------------------------|")
        print("\033[38;5;156m| *** MAIN MENU *** |\033[0m")
        print("|----------------------------------|")
        print("| [1] \033[38;5;140mNmap\033[0m                        |")
        print("|----------------------------------|")
        print("| [2] Netstat                      |")
        print("|----------------------------------|")
        print("| [4] Google and Google FU!        |")
        print("|----------------------------------|")
        print("| [8] Reset the Program            |")
        print("|----------------------------------|")
        print("| [0] Exit                         |")
        print("|----------------------------------|")

        while True:
            try:
                option=int(input("\n\033[38;5;156mWhat are you looking for / looking to do? Type just the number to select the option!\033[0m "))
                break
            except ValueError:
                print("\n\033[38;5;203mOpe!  What a midwestern thing of me to say...Let's try again, that didn't feel right!\033[0m\n")

        while option !=8:
            def option1():
                print("----------------------------------")
                print("\033[38;5;140mNmap:\033[0m")
                print("----------------------------------")
                print("[1] Nmap Explained and Basic Commands List")
                print("[2] Preset Nmap scanning - Hosts and Operating Systems")
                print("[3] Preset Nmap Scanning - Ports and SYN/ACK Flags")
                print("[9] \033[96mMain Menu\033[0m")
                print("[0] Exit")
                print("----------------------------------")
                
                while True:
                    try:
                        nmapoption=int(input("\nWhat do you want to do? Just type the number, and open the various menus for nmap scanning."))
                        break
                    except ValueError:
                        print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n")

                               
                
                if nmapoption ==1:
                    print("\nThis is the explanation of nmap and basically a little cheat sheet for the basic flags to accompany the command.\n")
                    mainmenu()
                elif nmapoption ==2:
                    def nmaphostmenu():
                        print("----------------------------------")
                        print("\033[38;5;140mNmap - Hosts and Operating Systems:\033[0m")
                        print("----------------------------------")
                        print("[1] Only Host Discovery")
                        print("[2] Only Port Discovery")
                        print("[3] OS Discovery - Need ROOT access!")
                        print("[4] Service Version Discovery") 
                        print("[5] Scan for Service, Traceroute, Ports, OS, and Scripts")
                        print("[6] Scan by Speed")
                        print("[7] Nmap Man Page")
                        print("[9] \033[96mMain Menu\033[0m")
                        print("[111] Reset the Target IP or URL")
                        print("[0] Exit")
                        print("----------------------------------")

                        while True:
                            try:
                                nmaphostos=int(input("\nWhat do you want to do? Just type the number, and open the various menus for nmap scanning."))
                                break
                            except ValueError:
                                print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n")

                        if nmaphostos ==1:
                            os.system("nmap -sn " + target)
                            nmaphostmenu()
                        elif nmaphostos ==2:
                            os.system("nmap -Pn " + target)
                            nmaphostmenu()

                        elif nmaphostos ==3:
                            os.system("nmap -O " + target)
                            oscheck = int(input("Were you able to find the OS version and information? Or would you like to do a more intense scan? Type 1 if you're good, type 2 if you need a deeper scan!"))
                            if oscheck ==1:
                                option1()
                            elif oscheck ==2:
                                os.system("nmap -O --osscan-guess " + target)
                            else:
                                print("\nOops! Looks like an invalid option. Let's try again, shall we? ")

                        elif nmaphostos ==4:
                            os.system("nmap -sV " + target)
                            nmaphostmenu()
                        elif nmaphostos ==5:
                            os.system("nmap -A " + target)
                            nmaphostmenu()
                        elif nmaphostos==6:
                            def scanbyspeedmenu():
                                print("----------------------------------")
                                print("\033[38;5;205mScan by Speed\033[0m")
                                print("----------------------------------")
                                print("[0] Paranoia (T0, IDS Evasion)")
                                print("[1] Sneaky Sneaky (T1, IDS Evasion)")
                                print("[2] Minnesota Nice (T2, Slows down to use less bandwith and resources)")
                                print("[3] Normies (T3, the normal scan speed)") 
                                print("[4] Assertive (T4, Speeds up the scan)")
                                print("[5] Aggressive (T5, Very speedy scan on a reliable network)")
                                print("[6] Nmap Menu")
                                print("[9] \033[96mMain Menu\033[0m")
                                print("----------------------------------")
                              

                                while True:
                                    try:
                                        scanbyspeed=int(input("\nWhat do you want to do? Just type the number, scan by the speed you want! The slower the speed, the more accurate it MAY be...though it will take time!"))
                                        break
                                    except ValueError:
                                        print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n")

                                if scanbyspeed ==0:
                                    os.system("nmap -T0 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==1:
                                    os.system("nmap -T1 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==2:
                                    os.system("nmap -T2 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==3:
                                    os.system("nmap -T3 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==4:
                                    os.system("nmap -T4 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==5:
                                    os.system("nmap -T5 " + target)
                                    scanbyspeedmenu()
                                elif scanbyspeed ==6:
                                    option1()

                            scanbyspeed()    
                                    
                        elif nmaphostos ==7:
                            os.system("nmap -h")
                            nmaphostmenu()

                        elif nmaphostos ==9:
                            mainmenu()
                            
                      

                        else:
                            print("\nOops! Let's try again, shall we?\n")
                            option1()
                                    
                    target = input("What IP or URL would you like to use for this scan? Note that you can always reset it!")
                    nmaphostmenu()
                
                elif nmapoption ==9:
                    mainmenu()
                
            def option4():
                print("----------------------------------")
                print("\033[38;5;205mGoogle and Google FU:\033[0m")
                print("----------------------------------")
                print("[1] \033[38;5;212mGoogle FU and Explanations\033[0m")
                print("[2] \033[38;5;99mSearch \"The Google\"\033[0m")
                print("[3] Full Google Search")
                print("[9] \033[96mMain Menu\033[0m")
                print("----------------------------------")

                while True:
                    try:
                        googleoption=int(input("\n\033[38;5;205mWhat are you looking for / looking to do? Type just the number to select the option!\033[0m \n"))
                        break
                    except ValueError:
                        print("\n\033[38;5;203mErmahgerd we made a DERP. Shall we try again? That was not a valid option!\033[0m\n")

               # if googleoption ==1:


                
                # Function to perform a Google search and print the results
                if googleoption ==2:
                    def google_search(query):
                        try:
                            # Perform the search
                            results = search(query, num_results=5, lang='en')

                        # Print the results
                            for i, result in enumerate(results, start=1):
                                print(f"Result {i}:")
                                print(result)
                                print("----------------------------------")
                        except Exception as e:
                            print(f"Error: {e}")

                    query = input("Enter your search query: ")
                    google_search(query)
                    


                elif googleoption ==3:
                    # Function to retrieve the title and description of a URL
                    def get_title_and_description(url):
                        try:
                            response = requests.get(url)
                            soup = BeautifulSoup(response.text, 'html.parser')
                            title = soup.title.string.strip()
                            description = soup.find('meta', attrs={'name': 'description'})
                            if description:
                                description = description.get('content').strip()
                            else:
                                description = "No description available."
                            return title, description
                        except requests.exceptions.RequestException:
                            return None, None

                    # Function to perform a Google search and print the results with additional information
                    def google_search(query):
                        try:
                            # Perform the search
                            results = search(query, num_results=5, lang='en')

                            # Print the results with additional information
                            for i, result in enumerate(results, start=1):
                                print(f"Result {i}:")
                                print("URL:", result)
                                title, description = get_title_and_description(result)
                                print("Title:", title)
                                print("Description:", description)
                                print("----------------------------------")
                        except Exception as e:
                            print(f"Error: {e}")

                    # Example usage
                    query = input("Enter your search query: ")
                    google_search(query)


            
                #if googeoption ==2:
                 #   searchword= input('Enter a word or phrase that you wish you search google for! You may get a lot of results, so I suggest using some google FU!')
                  #  url = f'https://www.google.com/search?q={searchword}'
                   # response = requests.get(url)
                    #soup = BeautifulSoup(response.content, 'html.parser')
                    #results = soup.select('.r a')
                    #for result in results:
                     #   print(result.get_text())
                      #  print("-------------------------------------------")

                elif googleoption ==9:
                    mainmenu()
                else:
                    print("Oops! Looks like an invalid option. Want to try again?")
                    option4()

            def exit():
                print("\n\033[38;5;156mAlrighty then! Thanks for visiting Log Lollygagging. We hope it helped! Happy Log Hunting\033[0m")
                os._exit(0)


### MAIN MENU FINAL PART OF DEF ###

            if option ==1:
                option1()
            elif option ==2:
                option2()
            elif option ==3:
                option3()
            elif option ==4:
                option4()
            elif option ==5:
                option5()
            elif option ==6:
                option6()
                mainmenu()
            elif option ==0:
                exit()
            else:
                print("\n\033[38;5;203mInvalid choice, try again.\033[0m")
                mainmenu()


### MAIN MENU 8 - RESET THE PROGRAM ###

        if option ==8:
            response=input("\n\033[38;5;38mWould you like to parse through another pcap file? Type Y for YES and N for NO\033[0m\n")
            if response.lower() =='y':
                intro()
            elif response.lower() =='n':
                mainmenu()
            else:
                print("\n\033[38;5;203mOh schucks. It looks like that wasn't a valid option! Let us start again!\033[0m\n")
                mainmenu()

    mainmenu()
intro()
